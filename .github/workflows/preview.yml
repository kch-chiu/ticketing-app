name: preview

on: workflow_dispatch

jobs:
  preview:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@master

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        with:
          version: v0.6.3
      
      - name: Login to Okteto Registry
        uses: docker/login-action@v1
        with:
          registry: registry.cloud.okteto.net
          username: kch-chiu
          password: ${{ secrets.OKTETO_TOKEN }}

      - name: Build and push dgraph-api builder
        uses: docker/build-push-action@v2
        with:
          context: ./dgraph-api
          file: ./dgraph-api/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            NODE_AUTH_TOKEN=${{ github.token }}
            BUILDKIT_INLINE_CACHE=1
          target: builder
          push: true
          tags: registry.cloud.okteto.net/kch-chiu/dgraph-api:builder
          cache-from: type=registry,ref=registry.cloud.okteto.net/kch-chiu/dgraph-api:builder

      - name: Build and push dgraph-api runner
        uses: docker/build-push-action@v2
        with:
          context: ./dgraph-api
          file: ./dgraph-api/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          build-args: BUILDKIT_INLINE_CACHE=1
          target: runner
          push: true
          tags: registry.cloud.okteto.net/kch-chiu/dgraph-api:${{ github.sha }}
          cache-from: |
            registry.cloud.okteto.net/kch-chiu/dgraph-api:builder
            registry.cloud.okteto.net/kch-chiu/dgraph-api:${{ github.sha }}

      # - name: Build and push dgraph-api
      #   uses: okteto/build@latest
      #   env:
      #     NODE_AUTH_TOKEN: ${{ github.token }}
      #   with:
      #     tag: okteto.dev/dgraph-api:${{ github.sha }}
      #     file: dgraph-api/Dockerfile
      #     path: dgraph-api
      #     buildargs: NODE_AUTH_TOKEN

      - name: Build and push payments builder
        uses: docker/build-push-action@v2
        with:
          context: ./payments
          file: ./payments/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            NODE_AUTH_TOKEN=${{ github.token }}
            BUILDKIT_INLINE_CACHE=1
          target: builder
          push: true
          tags: registry.cloud.okteto.net/kch-chiu/payments:builder
          cache-from: type=registry,ref=registry.cloud.okteto.net/kch-chiu/payments:builder
      
      - name: Build and push payments runner
        uses: docker/build-push-action@v2
        with:
          context: ./payments
          file: ./payments/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          build-args: BUILDKIT_INLINE_CACHE=1
          target: runner
          push: true
          tags: registry.cloud.okteto.net/kch-chiu/payments:${{ github.sha }}
          cache-from: |
            registry.cloud.okteto.net/kch-chiu/payments:builder
            registry.cloud.okteto.net/kch-chiu/payments:${{ github.sha }}
          
      # - name: Build and push payments
      #   uses: okteto/build@latest
      #   env:
      #     NODE_AUTH_TOKEN: ${{ github.token }}
      #   with:
      #     tag: okteto.dev/payments:${{ github.sha }}
      #     file: payments/Dockerfile
      #     path: payments
      #     buildargs: NODE_AUTH_TOKEN

      - name: Build and push orders builder
        uses: docker/build-push-action@v2
        with:
          context: ./orders
          file: ./orders/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            NODE_AUTH_TOKEN=${{ github.token }}
            BUILDKIT_INLINE_CACHE=1
          target: builder
          push: true
          tags: registry.cloud.okteto.net/kch-chiu/orders:builder
          cache-from: type=registry,ref=registry.cloud.okteto.net/kch-chiu/orders:builder

      - name: Build and push orders runner
        uses: docker/build-push-action@v2
        with:
          context: ./orders
          file: ./orders/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          build-args: BUILDKIT_INLINE_CACHE=1
          target: runner
          push: true
          tags: registry.cloud.okteto.net/kch-chiu/orders:${{ github.sha }}
          cache-from: |
            registry.cloud.okteto.net/kch-chiu/orders:builder
            registry.cloud.okteto.net/kch-chiu/orders:${{ github.sha }}

      # - name: Build and push orders
      #   uses: okteto/build@latest
      #   env:
      #     NODE_AUTH_TOKEN: ${{ github.token }}
      #   with:
      #     tag: okteto.dev/orders:${{ github.sha }}
      #     file: orders/Dockerfile
      #     path: orders
      #     buildargs: NODE_AUTH_TOKEN

      - name: Build and push tickets builder
        uses: docker/build-push-action@v2
        with:
          context: ./tickets
          file: ./tickets/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            NODE_AUTH_TOKEN=${{ github.token }}
            BUILDKIT_INLINE_CACHE=1
          target: builder
          push: true
          tags: registry.cloud.okteto.net/kch-chiu/tickets:builder
          cache-from: type=registry,ref=registry.cloud.okteto.net/kch-chiu/tickets:builder

      - name: Build and push tickets runner
        uses: docker/build-push-action@v2
        with:
          context: ./tickets
          file: ./tickets/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          build-args: BUILDKIT_INLINE_CACHE=1
          target: runner
          push: true
          tags: registry.cloud.okteto.net/kch-chiu/tickets:${{ github.sha }}
          cache-from: |
            registry.cloud.okteto.net/kch-chiu/tickets:builder
            registry.cloud.okteto.net/kch-chiu/tickets:${{ github.sha }}

      # - name: Build and push tickets
      #   uses: okteto/build@latest
      #   env:
      #     NODE_AUTH_TOKEN: ${{ github.token }}
      #   with:
      #     tag: okteto.dev/tickets:${{ github.sha }}
      #     file: tickets/Dockerfile
      #     path: tickets
      #     buildargs: NODE_AUTH_TOKEN

      - name: Build and push gateway builder
        uses: docker/build-push-action@v2
        with:
          context: ./gateway
          file: ./gateway/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            NODE_AUTH_TOKEN=${{ github.token }}
            BUILDKIT_INLINE_CACHE=1
          target: builder
          push: true
          tags: registry.cloud.okteto.net/kch-chiu/gateway:builder
          cache-from: type=registry,ref=registry.cloud.okteto.net/kch-chiu/gateway:builder

      - name: Build and push gateway runner
        uses: docker/build-push-action@v2
        with:
          context: ./gateway
          file: ./gateway/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          build-args: BUILDKIT_INLINE_CACHE=1
          target: runner
          push: true
          tags: registry.cloud.okteto.net/kch-chiu/gateway:${{ github.sha }}
          cache-from: |
            registry.cloud.okteto.net/kch-chiu/gateway:builder
            registry.cloud.okteto.net/kch-chiu/gateway:${{ github.sha }}

      # - name: Build and push gateway
      #   uses: okteto/build@latest
      #   env:
      #     NODE_AUTH_TOKEN: ${{ github.token }}
      #   with:
      #     tag: okteto.dev/gateway:${{ github.sha }}
      #     file: gateway/Dockerfile
      #     path: gateway
      #     buildargs: NODE_AUTH_TOKEN
      
      - name: Login to Okteto Cloud
        uses: okteto/context@latest
        with:
          token: ${{ secrets.OKTETO_TOKEN }}
          namespace: kch-chiu

      - name: Trigger the pipeline
        uses: okteto/pipeline@master
        with:
          name: ${{ github.workflow }}
          timeout: 10m

      - name: Publish GraphQL Dgraph schema
        env:
          APOLLO_KEY: ${{ secrets.TICKETING_DGRAPH_API_KEY }}
        run: |
          npx -p @apollo/rover \
            rover subgraph publish ticketing-dgraph-api \
            --routing-url http://dgraph-srv:8080/graphql \
            --schema dgraph/schema.graphql \
            --name dgraph \
            --convert

      - name: Publish GraphQL API schemas
        env:
          APOLLO_KEY: ${{ secrets.TICKETING_GATEWAY_KEY }}
        run: |
          npx -p @apollo/rover \
            rover subgraph publish ticketing-gateway \
            --routing-url http://tickets-srv:4001/graphql \
            --schema tickets/src/graphql/schema.graphql \
            --name tickets \
            --convert
          npx -p @apollo/rover \
            rover subgraph publish ticketing-gateway \
            --routing-url http://orders-srv:4002/graphql \
            --schema orders/src/graphql/schema.graphql \
            --name orders \
            --convert
          npx -p @apollo/rover \
            rover subgraph publish ticketing-gateway \
            --routing-url http://payments-srv:4003/graphql \
            --schema payments/src/graphql/schema.graphql \
            --name payments \
            --convert